{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/chat-input/chat-input.component.css","webpack:///./src/app/chat-input/chat-input.component.html","webpack:///./src/app/chat-input/chat-input.component.ts","webpack:///./src/app/chat-msg/chat-msg.component.css","webpack:///./src/app/chat-msg/chat-msg.component.html","webpack:///./src/app/chat-msg/chat-msg.component.ts","webpack:///./src/app/chat-window/chat-window.component.css","webpack:///./src/app/chat-window/chat-window.component.html","webpack:///./src/app/chat-window/chat-window.component.ts","webpack:///./src/app/client/ApiAiClient.ts","webpack:///./src/app/client/ApiAiConstants.ts","webpack:///./src/app/client/Errors.ts","webpack:///./src/app/client/Request.ts","webpack:///./src/app/client/TextRequest.ts","webpack:///./src/app/client/XhrRequest.ts","webpack:///./src/app/model/speech-error.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/app/services/speech-recognizer.service.ts","webpack:///./src/app/services/speech-synthesizer.service.ts","webpack:///./src/demo/app.component.css","webpack:///./src/demo/app.component.html","webpack:///./src/demo/app.component.ts","webpack:///./src/demo/app.module.ts","webpack:///./src/demo/environments/environment.ts","webpack:///./src/demo/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".full-width {\\n  width: 100%;\\n  color: #3f51c0;\\n  position: relative;\\n}\\n\\n.sendIcon {\\n  height: 22px;\\n  position: absolute;\\n  right: 5px;\\n  bottom: 32px;\\n}\\n\\n.available {\\n  opacity: 1;\\n  cursor: pointer;\\n}\\n\\n.unavailable {\\n  opacity: 0.4;\\n  cursor: not-allowed;\\n}\\n\\n.startRecIcon {\\n  height: 35px;\\n  position: absolute;\\n  right: 38px;\\n  bottom: 25px;\\n  cursor: pointer;\\n}\\n\\n.stopRecIcon {\\n  height: 35px;\\n  position: absolute;\\n  right: 38px;\\n  bottom: 25px;\\n  cursor: pointer;\\n}\\n\"","module.exports = \"<div class=\\\"full-width\\\">\\n  <mat-form-field class=\\\"full-width\\\">\\n    <input\\n      #input\\n      matInput\\n      placeholder=\\\"{{ placeHolderText }}\\\"\\n      [(ngModel)]=\\\"finalTranscript\\\"\\n      (keydown.enter)=\\\"sendMessage()\\\"\\n      (ngModelChange)=\\\"onInput($event)\\\"\\n    />\\n  </mat-form-field>\\n  <img\\n    class=\\\"sendIcon\\\"\\n    src=\\\"./assets/image/SendBtn.png\\\"\\n    (click)=\\\"sendMessage()\\\"\\n    [ngClass]=\\\"{ unavailable: sendIsDisabled, available: !sendIsDisabled }\\\"\\n  />\\n  <img\\n    *ngIf=\\\"!recognizing\\\"\\n    class=\\\"startRecIcon\\\"\\n    src=\\\"./assets/image/MicrophoneBtn.png\\\"\\n    (click)=\\\"startRecording($event)\\\"\\n  />\\n  <img\\n    *ngIf=\\\"recognizing\\\"\\n    class=\\\"stopRecIcon\\\"\\n    src=\\\"./assets/image/StopBtn.png\\\"\\n    (click)=\\\"startRecording($event)\\\"\\n  />\\n</div>\\n\"","import {\n  Component,\n  OnInit,\n  ChangeDetectorRef,\n  EventEmitter,\n  Output\n} from '@angular/core';\nimport { SpeechRecognizerService } from '../services/speech-recognizer.service';\nimport { SpeechNotification } from '../model/speech-notification';\nimport { SpeechError } from '../model/speech-error';\nimport { SpeechSynthesizerService } from '../services/speech-synthesizer.service';\n\n@Component({\n  selector: 'chat-input',\n  templateUrl: './chat-input.component.html',\n  styleUrls: ['./chat-input.component.css']\n})\nexport class ChatInputComponent implements OnInit {\n  recognizing = false;\n  finalTranscript = 'Hi';\n  placeHolderText = '';\n  inputHasText = true;\n  sendIsDisabled = false;\n  @Output()\n  msgToRoot = new EventEmitter();\n\n  constructor(\n    private changeDetector: ChangeDetectorRef,\n    private speechRecognizer: SpeechRecognizerService,\n    private speechSynthesizer: SpeechSynthesizerService\n  ) {}\n\n  ngOnInit() {\n    this.speechRecognizer.initialize('en-US');\n    this.initRecognition();\n    this.initSynthesize();\n  }\n\n  startRecording(event) {\n    if (this.recognizing) {\n      this.speechRecognizer.stop();\n      return;\n    }\n    this.speechRecognizer.start(event.timeStamp);\n  }\n\n  private initRecognition() {\n    this.speechRecognizer.onStart().subscribe(data => {\n      this.placeHolderText = 'Listening ...';\n      this.recognizing = true;\n      this.detectChanges();\n    });\n\n    this.speechRecognizer.onEnd().subscribe(data => {\n      this.placeHolderText = '';\n      this.recognizing = false;\n      this.detectChanges();\n    });\n\n    this.speechRecognizer.onResult().subscribe((data: SpeechNotification) => {\n      const message = data.content.trim();\n      if (data.info === 'final_transcript' && message.length > 0) {\n        this.placeHolderText = '';\n        this.finalTranscript = message;\n        this.onInput(message);\n        this.detectChanges();\n      }\n    });\n\n    this.speechRecognizer.onError().subscribe(data => {\n      switch (data.error) {\n        case SpeechError.BLOCKED:\n        case SpeechError.NOT_ALLOWED:\n          console.log(`Cannot run the demo.\n            Your browser is not authorized to access your microphone. Verify that your browser has access to your microphone and try again.\n            `);\n          break;\n        case SpeechError.NO_SPEECH:\n          console.log(`No speech has been detected. Please try again.`);\n          break;\n        case SpeechError.NO_MICROPHONE:\n          console.log(\n            `Microphone is not available. Plese verify the connection of your microphone and try again.`\n          );\n          break;\n        default:\n          break;\n      }\n      this.recognizing = false;\n      this.detectChanges();\n    });\n  }\n\n  private initSynthesize() {\n    this.speechSynthesizer.initSynthesis();\n  }\n\n  sendMessage() {\n    if (this.finalTranscript === '') {\n      return false;\n    }\n    this.msgToRoot.emit(this.finalTranscript);\n    this.finalTranscript = '';\n    this.sendIsDisabled = true;\n  }\n\n  onInput(event: string): void {\n    const passedString = event;\n    if (/\\S/.test(passedString)) {\n      this.sendIsDisabled = false;\n    } else {\n      this.sendIsDisabled = true;\n    }\n  }\n\n  detectChanges() {\n    this.changeDetector.detectChanges();\n  }\n}\n","module.exports = \".msg {\\n  display: -webkit-box;\\n  display: flex;\\n  position: relative;\\n  margin-right: 40px;\\n  margin-bottom: 2px;\\n  margin-bottom: 2px;\\n  margin-left: 10px;\\n  margin-top: 5px;\\n  opacity: 0;\\n  -webkit-transform: scale(0.5);\\n          transform: scale(0.5);\\n  -webkit-transition-property: opacity,-webkit-transform;\\n  transition-property: opacity,-webkit-transform;\\n  transition-property: transform,opacity;\\n  transition-property: transform,opacity,-webkit-transform;\\n  -webkit-transition-duration: 0.5s;\\n          transition-duration: 0.5s;\\n  -webkit-transition-timing-function: ease-in;\\n          transition-timing-function: ease-in;\\n}\\n\\n.show {\\n  -webkit-transform: scale(1);\\n          transform: scale(1);\\n  opacity:1;\\n}\\n\\n.card {\\n  height: -webkit-fit-content;\\n  height: -moz-fit-content;\\n  height: fit-content;\\n  border-radius: 10px 20px 0px 20px;\\n  padding: 10px 25px;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  text-align: center;\\n}\\n\\n.icon {\\n  margin-top: 10px;\\n  color: white;\\n  background: #3f51c0;\\n  border-radius: 35px;\\n  width: 35px !important;\\n  height: 35px !important;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  padding: 0px;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  position: absolute;\\n  z-index: 1;\\n  margin-left: -35px;\\n}\\n\\n.user {\\n  background-color: #3f51c0;\\n  color: white;\\n}\\n\\n.bot {\\n  min-width: 216px;\\n  border-radius: 20px 10px 20px 0px;\\n  background-color: white;\\n  color: #5ea9f0;\\n}\\n\\n.user-msg {\\n  margin-left: 40px;\\n  margin-right: 10px;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: reverse;\\n          flex-direction: row-reverse;\\n}\\n\\n.button-left {\\n  float: left;\\n  margin-left: 10px;\\n  margin-right: 10px;\\n}\\n\\n.button-center {\\n  width: 150px;\\n}\\n\\nbutton:disabled {\\n  cursor: not-allowed;\\n}\\n\"","module.exports = \"<div [ngSwitch]=\\\"msg.sendBy\\\">\\n  <div *ngSwitchCase=\\\"'bot'\\\" class=\\\"msg\\\" [class.show]=\\\"isVisible\\\">\\n    <mat-card class=\\\"card bot\\\">\\n      <mat-card class=\\\"icon\\\">\\n        <i class=\\\"material-icons\\\">\\n          android\\n        </i>\\n      </mat-card>\\n      <mat-card-content>\\n        {{msg.text}}\\n      </mat-card-content>\\n      <mat-card-content *ngFor=\\\"let option of msg.options\\\">\\n        <button\\n          mat-raised-button\\n          color=\\\"primary\\\"\\n\\t\\t  [ngClass]=\\\"{\\n            'button-center': msg.options.length > 2,\\n            'button-left': msg.options.length == 2\\n          }\\\"\\n          (click)=\\\"sendBtnMsg(option)\\\"\\n          [disabled]=\\\"!isBtnEnable\\\"\\n        >\\n          {{ option }}\\n        </button>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n  <div *ngSwitchCase=\\\"'user'\\\" class=\\\"msg user-msg\\\" [class.show]=\\\"isVisible\\\">\\n    <mat-card class=\\\"card user\\\">\\n      <mat-card-content>\\n        {{msg.text}}\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n</div>\\n\"","import { Component, Input, OnInit, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'chat-msg',\n  templateUrl: './chat-msg.component.html',\n  styleUrls: ['./chat-msg.component.css']\n})\nexport class ChatMsgComponent implements OnInit {\n  @Input() msg: object;\n  @Output()\n  msgToWindow = new EventEmitter();\n  public isVisible = false;\n  isBtnEnable: boolean;\n  constructor() { }\n\n  ngOnInit() {\n    this.isBtnEnable = true;\n    setTimeout(() => {\n      this.isVisible = true;\n    }, 0);\n  }\n\n  sendBtnMsg(msg: string) {\n    this.isBtnEnable = false;\n    this.msgToWindow.emit(msg);\n  }\n}\n","module.exports = \".chat-window {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n  width: 100%;\\n  /* background-color: #d219192e; */\\n  padding: 5px;\\n}\\n\\n.msgArea {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  overflow: auto;\\n  height: 100%;\\n}\\n\\n.input-area {\\n  display: -webkit-box;\\n  display: flex;\\n  width: 100%;\\n}\\n\"","module.exports = \"<mat-card class=\\\"chat-window\\\">\\n  <ng-container  [ngTemplateOutlet]=\\\"template\\\">\\n    <div class=\\\"msgArea\\\" #msgArea>\\n      <ng-container\\n        *ngFor=\\\"let msg of allMessages | async; let i = index\\\"\\n        [ngTemplateOutlet]=\\\"defaultMsgTemplate\\\"\\n        [ngTemplateOutletContext]=\\\"{\\n                                       text: msg.content ,\\n          sendBy: msg.sendBy,\\n          options: msg.options\\n                                    }\\\"\\n      >\\n\\n      </ng-container>\\n    </div>\\n    <div class=\\\"input-area\\\">\\n      <ng-container\\n        class=\\\"input-area\\\"\\n        [ngTemplateOutlet]=\\\"inputTemplate\\\"\\n      ></ng-container>\\n    </div>\\n  </ng-container>\\n</mat-card>\\n\\n<ng-template\\n  #defaultMsgTemplate\\n  let-text=\\\"text\\\"\\n  let-object=\\\"object\\\"\\n  let-sendBy=\\\"sendBy\\\"\\n  let-options=\\\"options\\\"\\n>\\n  <chat-msg\\n    [msg]=\\\"{ text: text, sendBy: sendBy, options: options }\\\"\\n    (msgToWindow)=\\\"msgFromChatMsgBtn($event)\\\"\\n  ></chat-msg>\\n</ng-template>\\n\\n<ng-template #defaultInputTemplate>\\n  <chat-input (change)=\\\"onChange($event.target)\\\"></chat-input>\\n</ng-template>\\n\"","import {\n  Component,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { DataService, ESendBy, Message } from '../services/data.service';\nimport { scan } from 'rxjs/internal/operators';\n\n@Component({\n  selector: 'Chat-bot',\n  templateUrl: './chat-window.component.html',\n  styleUrls: ['./chat-window.component.css']\n})\nexport class ChatWindowComponent implements OnInit {\n  @ContentChild(TemplateRef) template: TemplateRef<any>;\n  @Input() msgTemplate: TemplateRef<any>;\n  @Input() inputTemplate: TemplateRef<any>;\n  @Input() msg: Subject<any>;\n  @Input() serviceid: string;\n  @Output() onMsgReceive = new EventEmitter();\n  @ViewChild('msgArea') msgArea: ElementRef;\n  @ViewChild('defaultMsgTemplate') defaultMsgTemplate: TemplateRef<any>;\n  @ViewChild('defaultInputTemplate') defaultInputTemplate: TemplateRef<any>;\n\n  allMessages: Observable<Message[]>;\n\n  constructor(public dataService: DataService) {}\n\n  ngOnInit() {\n    this.msgTemplate = this.msgTemplate\n      ? this.msgTemplate\n      : this.defaultMsgTemplate;\n    this.inputTemplate = this.inputTemplate\n      ? this.inputTemplate\n      : this.defaultInputTemplate;\n    this.dataService.init(this.serviceid);\n    this.allMessages = this.dataService.conversation.asObservable().pipe(\n      scan((acc, val) => {\n        setTimeout(() => {\n          this.msgArea.nativeElement.scrollTop = this.msgArea.nativeElement.scrollHeight;\n        });\n        if (ESendBy.bot === val[0].sendBy) {\n          this.onMsgReceive.emit(val[0].content);\n        }\n        return acc.concat(val);\n      })\n    );\n    this.msg.subscribe(msg => {\n      this.dataService.converse(msg);\n    });\n  }\n\n  public onChange(target: any) {\n    this.sendMsg(target.value);\n    target.value = '';\n  }\n  public sendMsg(msg: string) {\n    this.msg.next(msg);\n  }\n  public msgFromChatMsgBtn(msg: string) {\n    this.sendMsg(msg);\n  }\n}\n","import { ApiAiConstants } from './ApiAiConstants';\nimport TextRequest from './TextRequest';\nimport { ApiAiClientConfigurationError } from './Errors';\n\nimport {\n  IApiClientOptions,\n  IRequestOptions,\n  IServerResponse\n} from './Interfaces';\n\nexport * from './Interfaces';\nexport { ApiAiConstants } from './ApiAiConstants';\n\nexport class ApiAiClient {\n  // private apiLang: ApiAiConstants.AVAILABLE_LANGUAGES;\n  // private apiVersion: string;\n  private apiBaseUrl: string;\n  private session: string;\n  private serviceid: string;\n\n  constructor(options: IApiClientOptions) {\n    if (!options || !options.serviceid) {\n      throw new ApiAiClientConfigurationError(\n        'Service ID is required for new ApiAi.Client instance'\n      );\n    }\n\n    this.serviceid = options.serviceid;\n    // this.apiLang = options.lang || ApiAiConstants.DEFAULT_CLIENT_LANG;\n    // this.apiVersion = options.version || ApiAiConstants.DEFAULT_API_VERSION;\n    this.apiBaseUrl = options.baseUrl || ApiAiConstants.DEFAULT_BASE_URL;\n    this.session = options.session;\n  }\n\n  public textRequest(\n    request,\n    options: IRequestOptions = {}\n  ): Promise<IServerResponse> {\n    if (!request) {\n      throw new ApiAiClientConfigurationError('Request should not be empty');\n    }\n    options.request = request;\n    return new TextRequest(this, options).perform();\n  }\n\n  public getAccessToken(): string {\n    return this.serviceid;\n  }\n\n  // public getApiVersion(): string {\n  //     return (this.apiVersion) ? this.apiVersion : ApiAiConstants.DEFAULT_API_VERSION;\n  // }\n\n  // public getApiLang(): ApiAiConstants.AVAILABLE_LANGUAGES {\n  //     return (this.apiLang) ? this.apiLang : ApiAiConstants.DEFAULT_CLIENT_LANG;\n  // }\n\n  public getApiBaseUrl(): string {\n    return this.apiBaseUrl ? this.apiBaseUrl : ApiAiConstants.DEFAULT_BASE_URL;\n  }\n\n  public setSession(sessionId: string) {\n    this.session = sessionId;\n  }\n\n  public getSession(): string {\n    return this.session;\n  }\n}\n","export namespace ApiAiConstants {\n  export enum AVAILABLE_LANGUAGES {\n    EN = 'en' as any,\n    DE = 'de' as any,\n    ES = 'es' as any,\n    PT_BR = 'pt-BR' as any,\n    ZH_HK = 'zh-HK' as any,\n    ZH_CN = 'zh-CN' as any,\n    ZH_TW = 'zh-TW' as any,\n    NL = 'nl' as any,\n    FR = 'fr' as any,\n    IT = 'it' as any,\n    JA = 'ja' as any,\n    KO = 'ko' as any,\n    PT = 'pt' as any,\n    RU = 'ru' as any,\n    UK = 'uk' as any\n  }\n\n  // export const DEFAULT_BASE_URL: string = \"https://api.dialogflow.com/v1/\";\n  export const DEFAULT_BASE_URL: string =\n    'http://ice-xd.southindia.cloudapp.azure.com:14121/api/conversation/master/dialogue';\n  export const DEFAULT_API_VERSION: string = '20150910';\n  export const DEFAULT_CLIENT_LANG: AVAILABLE_LANGUAGES =\n    AVAILABLE_LANGUAGES.EN;\n}\n","export abstract class ApiAiBaseError extends Error {\n\n    public abstract name: string;\n    public stack: string;\n    constructor(public message: string) {\n        super(message);\n        this.stack = new Error().stack;\n    }\n}\n\nexport class ApiAiClientConfigurationError extends ApiAiBaseError {\n\n    public name: string = \"ApiAiClientConfigurationError\";\n\n    constructor(message: string) {\n        super(message);\n    }\n}\n\nexport class ApiAiRequestError extends ApiAiBaseError {\n\n    public name: string = \"ApiAiRequestError\";\n\n    constructor(public message: string, public code: number = null) {\n        super(message);\n    }\n}\n","import { ApiAiClient } from './ApiAiClient';\nimport { ApiAiRequestError } from './Errors';\nimport { IRequestOptions, IServerResponse, IStringMap } from './Interfaces';\nimport XhrRequest from './XhrRequest';\n\nabstract class Request {\n  private static handleSuccess(xhr: XMLHttpRequest): Promise<IServerResponse> {\n    return Promise.resolve(JSON.parse(xhr.responseText));\n  }\n\n  private static handleError(xhr: XMLHttpRequest): Promise<ApiAiRequestError> {\n    let error = new ApiAiRequestError(null);\n    try {\n      const serverResponse: IServerResponse = JSON.parse(xhr.responseText);\n      if (serverResponse.status && serverResponse.status.errorDetails) {\n        error = new ApiAiRequestError(\n          serverResponse.status.errorDetails,\n          serverResponse.status.code\n        );\n      } else {\n        error = new ApiAiRequestError(xhr.statusText, xhr.status);\n      }\n    } catch (e) {\n      error = new ApiAiRequestError(xhr.statusText, xhr.status);\n    }\n\n    return Promise.reject<ApiAiRequestError>(error);\n  }\n\n  protected uri;\n  protected requestMethod;\n  // protected headers;\n\n  constructor(\n    protected apiAiClient: ApiAiClient,\n    protected options: IRequestOptions\n  ) {\n    this.uri = this.apiAiClient.getApiBaseUrl();\n    this.requestMethod = XhrRequest.Method.POST;\n    // this.headers = {\n    //   Authorization: \"Bearer \" + this.apiAiClient.getAccessToken(),\n    // };\n\n    // this.options.lang = this.apiAiClient.getApiLang();\n    this.options.serviceid = this.apiAiClient.getAccessToken();\n    this.options.session = this.apiAiClient.getSession();\n  }\n\n  public perform(overrideOptions = null): Promise<IServerResponse> {\n    const options = overrideOptions ? overrideOptions : this.options;\n\n    return XhrRequest.ajax(this.requestMethod, this.uri, options as IStringMap)\n      .then(Request.handleSuccess.bind(this))\n      .catch(Request.handleError.bind(this));\n  }\n}\n\nexport default Request;\n","import Request from \"./Request\";\nexport default class TextRequest extends Request {\n\n}\n","import {IStringMap} from \"./Interfaces\";\nclass XhrRequest {\n    // Method that performs the ajax request\n    public static ajax(\n        method: XhrRequest.Method,\n        url: string,\n        args: IStringMap = null,\n        headers: IStringMap = null,\n        options: IStringMap = {}\n    ): Promise<any> {\n\n        // Creating a promise\n        return new Promise((resolve, reject) => {\n\n            // Instantiates the XMLHttpRequest\n            const client: XMLHttpRequest = XhrRequest.createXMLHTTPObject();\n            let uri: string = url;\n            let payload = null;\n\n            // Add given payload to get request\n            if (args && (method === XhrRequest.Method.GET)) {\n                uri += \"?\";\n                let argcount = 0;\n                for (const key in args) {\n                    if (args.hasOwnProperty(key)) {\n                        if (argcount++) {\n                            uri += \"&\";\n                        }\n                        uri += encodeURIComponent(key) + \"=\" + encodeURIComponent(args[key]);\n                    }\n                }\n            } else if (args) {\n                if (!headers) {\n                    headers = {};\n                }\n                headers[\"Content-Type\"] = \"application/json; charset=utf-8\";\n                payload = JSON.stringify(args);\n            }\n\n            for (const key in options) {\n                if (key in client) {\n                    client[key] = options[key];\n                }\n            }\n\n            // hack: method[method] is somewhat like .toString for enum Method\n            // should be made in normal way\n            client.open(XhrRequest.Method[method], uri, true);\n            // Add given headers\n\n            if (headers) {\n                for (const key in headers) {\n                    if (headers.hasOwnProperty(key)) {\n                        client.setRequestHeader(key, headers[key]);\n                    }\n                }\n            }\n\n            payload ? client.send(payload) : client.send();\n\n            client.onload = () => {\n                if (client.status >= 200 && client.status < 300) {\n                    // Performs the function \"resolve\" when this.status is equal to 2xx\n                    resolve(client);\n                } else {\n                    // Performs the function \"reject\" when this.status is different than 2xx\n                    reject(client);\n                }\n            };\n            client.onerror = () => {\n                reject(client);\n            };\n        });\n\n    }\n\n    public static get(url, payload: IStringMap = null, headers: IStringMap = null, options = {}): Promise<any> {\n        return XhrRequest.ajax(XhrRequest.Method.GET, url, payload, headers, options);\n    }\n\n    public static post(url: string, payload: IStringMap = null, headers: IStringMap = null,\n                       options = {}): Promise<any> {\n        return XhrRequest.ajax(XhrRequest.Method.POST, url, payload, headers, options);\n    }\n\n    public static put(url: string, payload: IStringMap = null, headers: IStringMap = null,\n                      options = {}): Promise<any>  {\n        return XhrRequest.ajax(XhrRequest.Method.PUT, url, payload, headers, options);\n    }\n\n    public static delete(url: string, payload: IStringMap = null, headers: IStringMap = null,\n                         options = {}): Promise<any>  {\n        return XhrRequest.ajax(XhrRequest.Method.DELETE, url, payload, headers, options);\n    }\n\n    private static XMLHttpFactories: Function[] = [\n        () => new XMLHttpRequest(),\n        () => new window[\"ActiveXObject\"](\"Msxml2.XMLHTTP\"),\n        () => new window[\"ActiveXObject\"](\"Msxml3.XMLHTTP\"),\n        () => new window[\"ActiveXObject\"](\"Microsoft.XMLHTTP\")\n    ];\n\n    private static createXMLHTTPObject(): XMLHttpRequest {\n        let xmlhttp: XMLHttpRequest = null;\n        for (const i of XhrRequest.XMLHttpFactories) {\n            try {\n                xmlhttp = i();\n            } catch (e) {\n                continue;\n            }\n            break;\n        }\n\n        return xmlhttp;\n    }\n}\n\nnamespace XhrRequest {\n    export enum Method {\n        GET = \"GET\" as any,\n        POST = \"POST\" as any,\n        PUT = \"PUT\" as any,\n        DELETE = \"DELETE\" as any\n    }\n}\n\nexport default XhrRequest;\n","export enum SpeechError {\n  NO_SPEECH,\n  NO_MICROPHONE,\n  NOT_ALLOWED,\n  BLOCKED\n}\n","import { Injectable } from '@angular/core';\n\n// Ai api Client\nimport { ApiAiClient } from '../client/ApiAiClient';\n\n// RxJs modules\nimport { BehaviorSubject } from 'rxjs';\nimport { SpeechSynthesizerService } from './speech-synthesizer.service';\n\nexport class Message {\n  constructor(\n    public content: string,\n    public sendBy: ESendBy,\n    public options: string[]\n  ) {}\n}\n\nexport enum ESendBy {\n  user = 'user',\n  bot = 'bot'\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  private client;\n\n  conversation = new BehaviorSubject<Message[]>([]);\n\n  constructor(private speechSynthesizer: SpeechSynthesizerService) {}\n\n  public converse(msg: string) {\n    if (!isNaN(Number(msg.replace(/ /g, ''))) || msg.indexOf('/') > -1) {\n      msg = msg.replace(/ /g, '');\n    }\n    const userMessage = new Message(msg, ESendBy.user, []);\n    this.update(userMessage);\n    return this.client.textRequest(msg).then(res => {\n      const speech = res.response;\n      let options = res.options;\n      if (speech[0].indexOf('Anthem Bot') > -1) {\n        options = ['Case creation', 'Case status inquiry', 'HRS Assessment'];\n      }\n      \n      this.speechSynthesizer.speak(speech, 'en-US');\n      this.client.setSession(res.session);\n      const botMessage = new Message(speech, ESendBy.bot, options);\n      this.update(botMessage);\n    });\n  }\n\n  public update(msg: Message) {\n    this.conversation.next([msg]);\n  }\n\n  public init(serviceid: string) {\n    this.client = new ApiAiClient({ serviceid: serviceid, session: null });\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { SpeechNotification } from '../model/speech-notification';\r\nimport { SpeechError } from '../model/speech-error';\r\n\r\nimport { AppWindow } from '../model/app-window';\r\nconst { webkitSpeechRecognition }: AppWindow = <AppWindow>window;\r\n\r\n@Injectable()\r\nexport class SpeechRecognizerService {\r\n  recognition: any;\r\n  startTimestamp;\r\n  ignoreOnEnd: boolean;\r\n  language: string;\r\n\r\n  constructor() {}\r\n\r\n  initialize(language: string): void {\r\n    this.recognition = new webkitSpeechRecognition();\r\n    this.recognition.continuous = true;\r\n    this.recognition.interimResults = true;\r\n    this.recognition.lang = language;\r\n    this.recognition.continuous = true;\r\n    this.recognition.interimResults = true;\r\n  }\r\n\r\n  setLanguage(language: string) {\r\n    this.recognition.lang = language;\r\n  }\r\n\r\n  start(timestamp) {\r\n    this.startTimestamp = timestamp;\r\n    this.recognition.start();\r\n  }\r\n\r\n  onStart(): Observable<SpeechNotification> {\r\n    if (!this.recognition) {\r\n      this.initialize(this.language);\r\n    }\r\n\r\n    return new Observable(observer => {\r\n      this.recognition.onstart = () => {\r\n        console.log('started');\r\n        observer.next({\r\n          info: 'info_speak_now'\r\n        });\r\n      };\r\n    });\r\n  }\r\n\r\n  onEnd(): Observable<SpeechNotification> {\r\n    return new Observable(observer => {\r\n      this.recognition.onend = () => {\r\n        if (this.ignoreOnEnd) {\r\n          return;\r\n        }\r\n        console.log('ended');\r\n        observer.next({\r\n          info: 'info_start'\r\n        });\r\n      };\r\n    });\r\n  }\r\n\r\n  onResult(): Observable<SpeechNotification> {\r\n    return new Observable(observer => {\r\n      this.recognition.onresult = event => {\r\n        let interimTranscript = '';\r\n        let finalTranscript = '';\r\n\r\n        for (let i = event.resultIndex; i < event.results.length; ++i) {\r\n          if (event.results[i].isFinal) {\r\n            finalTranscript += event.results[i][0].transcript;\r\n          } else {\r\n            interimTranscript += event.results[i][0].transcript;\r\n          }\r\n        }\r\n\r\n        observer.next({\r\n          info: 'final_transcript',\r\n          content: finalTranscript\r\n        });\r\n        observer.next({\r\n          info: 'interim_transcript',\r\n          content: interimTranscript\r\n        });\r\n      };\r\n    });\r\n  }\r\n\r\n  onError(): Observable<SpeechNotification> {\r\n    return new Observable(observer => {\r\n      this.recognition.onerror = event => {\r\n        let result: SpeechError;\r\n        if (event.error === 'no-speech') {\r\n          result = SpeechError.NO_SPEECH;\r\n          this.ignoreOnEnd = true;\r\n        }\r\n        if (event.error === 'audio-capture') {\r\n          result = SpeechError.NO_MICROPHONE;\r\n          this.ignoreOnEnd = true;\r\n        }\r\n        if (event.error === 'not-allowed') {\r\n          if (event.timeStamp - this.startTimestamp < 100) {\r\n            result = SpeechError.BLOCKED;\r\n          } else {\r\n            result = SpeechError.NOT_ALLOWED;\r\n          }\r\n\r\n          this.ignoreOnEnd = true;\r\n        }\r\n        observer.next({\r\n          error: result\r\n        });\r\n      };\r\n    });\r\n  }\r\n\r\n  stop() {\r\n    this.recognition.stop();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class SpeechSynthesizerService {\n\n  message: any;\n\n  constructor() {\n    this.initSynthesis();\n  }\n\n  initSynthesis(): void {\n    this.message = new SpeechSynthesisUtterance();\n    this.message.volume = 1;\n    this.message.rate = 1;\n    this.message.pitch = 0.2;\n  }\n\n  speak(message: string, language: string): void {\n    this.message.lang = language;\n    this.message.text = message;\n    speechSynthesis.speak(this.message);\n  }\n}\n","module.exports = \"/* .chat-window {\\n  display: flex;\\n  min-height: 500px;\\n  max-height: 500px;\\n  width: 100%;\\n  border: 10px solid;\\n  border-color: #3496eb;\\n  width: 100%;\\n}\\n\\n.container {\\n  display: flex;\\n  height: 200px;\\n  width: 100px;\\n}\\n\\n.message {\\n  display: flex;\\n  border-radius: 50px;\\n  justify-content: center;\\n  align-items: center;\\n  padding: 5px 10px;\\n}\\n\\n\\n.maindiv{\\n  width:100%;\\n  height:300px;\\n}\\n\\n.leftdiv {\\n  position: absolute;\\n  width:50%;\\n  height:auto;\\n  left: 0;\\n  overflow-x: hidden;\\n  z-index:   1;\\n\\n}\\n.rightdiv {\\n  position: absolute;\\n  width: 42%;\\n  padding-right: 39px;\\n  margin-top: 30px;\\n  margin-bottom: 50px;\\n  height: auto;\\n  right: 0;\\n}\\n\\n.logo {\\npadding-left:170px;\\nheight : 53px;\\nwidth: 25px;\\n}\\n\\n.leftimg2 {\\n  padding: 10px;\\n \\n}\\n.image1{\\npadding: 10px;\\n}\\n\\n.image2{\\n  padding-left: 10px;\\n  height: 133px;\\n}\\n.image3{\\n  height: 53px;\\n}\\n\\n\\n\\n\\n */\\n\\n .maindiv{\\n  width:100%;\\n  height:300px;\\n}\\n\\n .leftdiv {\\n  position: absolute;\\n  width:50%;\\n  height:auto;\\n  left: 0;\\n  overflow-x: hidden;\\n  z-index:   1;\\n\\n}\\n\\n /* .rightdiv {\\n  position: absolute;\\n  width:50%;\\n  height:auto; \\n  right: 0;\\n  padding-right:10%;\\n  border-radius: 2%;\\n  margin-right: 20px;\\n\\n} */\\n\\n .leftimg1 {\\n\\n  /* width: 10%; */\\n  height: 10%;\\n  padding-top: 05%;\\n  /* padding-left:35%; */\\n  padding-left: 10px;\\n}\\n\\n .imageClass{\\n  width: 35%;\\n  float: left;\\n  padding-top: 35px;\\n  \\n}\\n\\n .imageClass1{\\n  width:65%;\\n  float: right;\\n  \\n}\\n\\n .leftimg2 {\\n  padding: 10px;\\n  display: block;\\n  margin: 0 auto; \\n}\\n\\n .paragraphRight{\\n  padding-top: 120px;\\n  padding-left: 40%;\\n  text-align: justify;\\n  color: #909090;\\n  font-family: \\\"SF Pro Display\\\";\\n  font-size: 12px;\\n  font-weight: 500;\\n  line-height: 18px;\\n  /* Text style for \\\"Lorem Ipsu\\\" */\\n  font-family: Helvetica;\\n  font-weight: 400;\\n}\\n\\n .paragraphDown{\\n  padding-top: 30px;\\n  padding-left: 30px;\\n  text-align: justify;\\n  color: #909090;\\n  font-family: \\\"SF Pro Display\\\";\\n  font-size: 12px;\\n  font-weight: 500;\\n  line-height: 18px;\\n  /* Text style for \\\"Lorem Ipsu\\\" */\\n  font-family: Helvetica;\\n  font-weight: 400;\\n}\\n\\n .rightimg1{\\n  padding-left: 30px;\\n\\n}\\n\\n .rightdiv {\\n  position: absolute;\\n  width:50%;\\n  height:auto; \\n  right: 0;\\n  padding-right:10%;\\n  border-radius: 2%;\\n  margin-right: 20px;\\n}\\n\\n .image3{\\n   width: 35%;\\n  float: left;\\n  padding-top: 35px;\\n  /* padding-left: 30px; */\\n}\\n\\n .chat-window {\\n  display: -webkit-box;\\n  display: flex;\\n  min-height: 450px;\\n  max-height: 500px;\\n  width: 100%;\\n  border: 14px solid;\\n  border-color: #2574bf;\\n  border-radius: 20px;\\n  width: 100%;\\n}\\n\\n .container {\\n  display: -webkit-box;\\n  display: flex;\\n  height: 200px;\\n  width: 100px;\\n}\\n\\n .message {\\n  display: -webkit-box;\\n  display: flex;\\n  border-radius: 50px;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  padding: 5px 10px;\\n}\"","module.exports = \"<script></script>\\n\\n<div class=\\\"maindiv\\\">\\n  <div class=\\\"leftdiv\\\">\\n    <h1></h1>\\n    <div class=\\\"leftimg1\\\">\\n      <img class=\\\"imageClass\\\" src=\\\"./assets/image/98-layers.png\\\" />\\n      <div>\\n        <img class=\\\"imageClass1\\\" src=\\\"./assets/image/43-layers.png\\\" />\\n        <div class=\\\"paragraphRight\\\">\\n          The Anthem Health Care Management Division has a singular dynamic\\n          focus - to continually improve the system of health care delivery that\\n          influences utilization and cost of services and measures performance.\\n          Medical Management includes a collection of processes that help to\\n          optimize the cost of quality care by effectively facilitating the\\n          right care interventions to the right members, at the right time, and\\n          in the right setting.\\n        </div>\\n      </div>\\n      <div class=\\\"paragraphDown\\\">\\n        <p>\\n          Utilization Management (UM) is a process that allows Anthem to manage\\n          the cost of health care benefits by assessing its appropriateness\\n          before it is provided, by using evidence-based criteria or\\n          guidelines.<br />\\n        </p>\\n        <p>\\n          Pre- authorization review which is done as part of UM requests by\\n          providers/practitioners of benefits are reviewed by Anthem registered\\n          nurses to determine if requests meet applicable benefit coverage and\\n          Anthem medical policy criteria.<br />\\n        </p>\\n        <p>\\n          While both Payer(Anthem) and Provider(Physicians) want to give good\\n          care for the patients, the providers have incentive to prescribe\\n          arguably redundant treatment to avoid future questioning and even\\n          mal-practice suits. On the other hand, the payer would like to pay\\n          only for the treatments that are necessary. This tradeoff is where the\\n          UM (Utilization management) system comes in.\\n        </p>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"rightdiv\\\" style=\\\"width:33%;height:500px;\\\">\\n    <div class=\\\"rightimg1\\\">\\n      <img class=\\\"image3\\\" src=\\\"./assets/image/16-layers.png\\\" />\\n    </div>\\n    <Chat-bot\\n      class=\\\"chat-window\\\"\\n      [serviceid]=\\\"\\n        '0AwytEuZlWShosO28uNtibIvw9onUxxN8lBLPpLuYIqBD5uu0j7QxZWkrpN0sJxD'\\n      \\\"\\n      [msg]=\\\"msg\\\"\\n      [msgTemplate]=\\\"message\\\"\\n      [inputTemplate]=\\\"input\\\"\\n      (onMsgReceive)=\\\"onMsgReceive($event)\\\"\\n    >\\n      <ng-template #window> </ng-template>\\n    </Chat-bot>\\n\\n    <ng-template\\n      #message\\n      let-text=\\\"text\\\"\\n      let-object=\\\"object\\\"\\n      let-sendBy=\\\"sendBy\\\"\\n      let-options=\\\"options\\\"\\n    >\\n      <chat-msg\\n        [msg]=\\\"{ text: text, sendBy: sendBy, options: options }\\\"\\n      ></chat-msg>\\n    </ng-template>\\n    <ng-template #input>\\n      <chat-input (msgToRoot)=\\\"msgFromChatInput($event)\\\"></chat-input>\\n    </ng-template>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { Observable, Subject, from } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  public msg: Subject<any> = new Subject();\n  public msgArray: Observable<Array<any>> = new Observable<Array<any>>();\n\n  constructor() {}\n\n  msgFromChatInput(message: any) {\n    this.msg.next(message);\n  }\n\n  public onMsgReceive(msg: string) {}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { ChatWindowComponent } from '../app/chat-window/chat-window.component';\nimport { ChatMsgComponent } from '../app/chat-msg/chat-msg.component';\nimport { ChatInputComponent } from '../app/chat-input/chat-input.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { FormsModule } from '@angular/forms';\nimport { SpeechRecognizerService } from 'src/app/services/speech-recognizer.service';\nimport { SpeechSynthesizerService } from 'src/app/services/speech-synthesizer.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChatWindowComponent,\n    ChatMsgComponent,\n    ChatInputComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatCardModule,\n    FormsModule\n  ],\n  providers: [SpeechRecognizerService, SpeechSynthesizerService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n"],"sourceRoot":""}